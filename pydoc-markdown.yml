# pydoc-markdown.yml

loaders:
  - type: python
    # Adjust 'src' to your main Python package directory relative to this file.
    # If your package is e.g. 'my_package' at the root, use 'my_package'.
    # If it's 'project_root/src/my_package', and this YAML is at project_root,
    # and you want to document 'my_package', search_path could be ['src'].
    # Or be more explicit with packages:
    search_path: [src] # Assuming your code is in a 'src' directory
    # Alternatively, if your package 'my_pkg' is at the root:
    # search_path: ["."] # Search from the current directory
    # packages:
    #  - my_pkg

processors:
  - type: filter
    # If true, modules that do Rack any members after processing are removed.
    skip_empty_modules: true
    # 'exclude_attrs' was an unknown key.
    # pydoc-markdown typically defaults to showing public members.
    # If you need to explicitly exclude members (e.g., all starting with '_'),
    # you might use 'expression' or 'exclude_wildcards'. For now, let's rely on defaults.
    # Example:
    # exclude_wildcards:
    #   - "*._*"  # Excludes members starting with an underscore in any module/class

  - type: smart # Infers titles and table of contents from headings.
  - type: crossref # Generates cross-references for recognized identifiers.

renderer:
  type: markdown
  # Renderer-specific options go under a 'config' key.
  config:
    # Output directory for the generated Markdown files.
    # This path is relative to where pydoc-markdown is executed (main_repo root).
    output_directory: "pydoc_generated_docs"

    # Generate one Markdown file per module.
    pages_type: module # Options: 'module', 'flat', 'toc_only'

    # Customize the name of the generated files if needed. Default is usually {module_name}.md
    # filename_format: "{module.path}.md" # Example for more control

    # Render a header for each module.
    render_module_header: true

    # Render a table of contents at the top of each generated page.
    render_toc: true
    
    # You can control member visibility if defaults aren't what you want.
    # Default usually focuses on public API.
    # members_visibility: public # Explicitly 'public', 'protected', 'private'